@{

    ViewBag.Title = "display";

}

<!DOCTYPE html>
<html>
<body>
    <canvas id="myCanvas"></canvas>
    <input id="drawPath" type="hidden" value="@ViewBag.drawPath"/>
    <input id="samplingRate" type="hidden" value="@ViewBag.samplingRate"/>
    <input id="mode" type="hidden" value="@ViewBag.mode"/>
    <input id="fileName" type="hidden" value="@ViewBag.fileName" />
    <input id="seconds" type="hidden" value="@ViewBag.seconds" />
    <script src="~/Scripts/jquery-1.10.2.js"></script>
    <script>

        // draw the point
        drawPoint = function (ctx, x, y) {
            // normalize x and y
            var normalizedX = ((x + 180) * (window.innerWidth / 360));
            var normalizedY = ((y + 90) * (window.innerHeight / 180));

            ctx.beginPath();
            ctx.lineWidth = 2;
            ctx.arc(normalizedX, normalizedY, 4, 0, Math.PI * 2);
            ctx.fillStyle = "Red";
            ctx.fill();
            ctx.strokeStyle = "Blue";
            ctx.stroke();
            ctx.closePath();
        }

        // draw only point
        drawOnlyPoint = function () {

            var windowWidth = window.innerWidth;
            var windowHeight = window.innerHeight;

            var canvas = document.getElementById("myCanvas");
            var ctx = canvas.getContext("2d");

            canvas.width = windowWidth;
            canvas.height = windowHeight;


            var background = new Image();
            background.src = "/Content/Images/map.png";

            background.onload = function () {
                //draw background image
                ctx.drawImage(background, 0, 0, background.width, background.height, 0, 0, canvas.width, canvas.height);

                $.get("/First/GetLonLat", function (data) {
                    drawPoint(ctx, data.Lon, data.Lat);
                });
            }

        }

        // draw the path
        drawAllPath = function () {
            var samplingRate = $("#samplingRate").val();
            var samplingRateValue = samplingRate * 1000;
            var fileName = "";
            var seconds = 0;
            
            if ($("#mode").val() == "readFromFile") {
                fileName = $("#fileName").val();
            } else if ($("#mode").val() == "saveToFile") {
                seconds = $("#seconds").val();
                fileName = $("#fileName").val();
            }

            // create array for the path
            var path = new Array;
            var updateInfoID;

            var windowWidth = window.innerWidth;
            var windowHeight = window.innerHeight;

            var canvas = document.getElementById("myCanvas");
            var ctx = canvas.getContext("2d");

            canvas.width = windowWidth;
            canvas.height = windowHeight;

            var background = new Image();
            background.src = "/Content/Images/map.png";


            background.onload = function () {

                var updateInfo = function () {

                    // get the information from the simulator
                    if ($("#mode").val() == "simulator" || $("#mode").val() == "saveToFile") {
                        
                        $.get("/First/GetLonLat", function (data) {
                            
                            if (path.length == 0 || (path[path.length - 1].Lon != data.Lon && path[path.length - 1].Lat != data.Lat)) {
                                // add new data to the path
                                path.push(data);
                            }
                            drawPoint(ctx, data.Lon, data.Lat);
                            // read info with breaks
                            updateInfoID = setTimeout(updateInfo, samplingRateValue);
                        });
                    }
                    // get the information from the file
                    else if ($("#mode").val() == "readFromFile") {
                        $.get("/First/ReadFromFile", { "file_name": fileName }, function (data) {
                            console.info(data);
                            dataAsJson = JSON.parse(data);

                            var index = 0;
                            updateFromFile = function () {
                                // add new data to the path
                                path.push(dataAsJson[index]);
                                index++;
                                // if we doesnt finish to read from the file
                                if (index < dataAsJson.length) {
                                    setTimeout(updateFromFile, samplingRateValue);
                                }
                                // no more data to read
                                else {
                                    setTimeout(
                                        function () {
                                            alert("done the animation!");
                                        }, 1000);
                                }
                            }

                            updateFromFile();
                        });
                    }
                }

                updateInfo();

                // draw the animation
                var drawInfo = function () {
                    //draw background image
                    ctx.drawImage(background, 0, 0, background.width, background.height, 0, 0, canvas.width, canvas.height);

                    // if there is just one point, draw only point
                    if (path.length == 1) {
                        drawPoint(ctx, path[0].Lon, path[0].Lat);
                    } else if (path.length != 0) {
                        // normalize lon and lat
                        var normalizedLon = ((path[0].Lon + 180) * (window.innerWidth / 360));
                        var normalizedLat = ((path[0].Lat + 90) * (window.innerHeight / 180));

                        ctx.beginPath();
                        ctx.lineWidth = "1";
                        ctx.strokeStyle = "red";
                        ctx.moveTo(normalizedLon, normalizedLat);

                        // draw the current path
                        for (var i = 1; i < path.length; i++) {
                            normalizedLon = ((path[i].Lon + 180) * (window.innerWidth / 360));
                            normalizedLat = ((path[i].Lat + 90) * (window.innerHeight / 180));
                            ctx.lineTo(normalizedLon, normalizedLat);
                        }
                        ctx.stroke();
                        // draw the current airplan's position
                        drawPoint(ctx, path[path.length - 1].Lon, path[path.length - 1].Lat);
                    }

                    //rerender 4 times in sec
                    setTimeout(drawInfo, 1000 / 4);
                }

                drawInfo();

                // save the information to the file
                var saveToFile = function () {
                    // stop the animation
                    if (updateInfoID != undefined && updateInfoID != null) {
                        clearTimeout(updateInfoID);
                    }

                    // save the flight info to the file
                    var data = { "file_name": fileName, "info": JSON.stringify(path) }
                    console.info(data);

                    $.ajax({
                        type: "POST",
                        traditional: true,
                        url: "/First/WriteToFile",
                        content: "application/json;",
                        dataType: "json",
                        data: data,
                        success: function () {
                            console.info("saved successfuly");
                        }
                    });
                }

                // if we need to save to file
                // run the animation the number of seconds that required and than stop the animation and save the flight info to the file
                if ($("#mode").val() == "saveToFile") {
                    setTimeout(saveToFile, seconds * 1000);
                }
            }
        }

        if ($("#drawPath").val() == false) {
            drawOnlyPoint();
        } else {
            drawAllPath();
        }
    </script>
</body>
</html>